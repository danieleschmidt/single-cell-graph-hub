# TERRAGON SDLC v4.0 Production Deployment Configuration
# Ultra-Autonomous Cognitive Evolution Framework
# Deploy Date: 2024-08-19

apiVersion: v1
kind: ConfigMap
metadata:
  name: terragon-sdlc-config
  namespace: production
data:
  config.yaml: |
    terragon:
      version: "4.0"
      mode: "production"
      
      # Research Domains Configuration
      research_domains:
        - "graph_neural_networks"
        - "single_cell_analysis"
        - "biological_pathway_modeling"
        - "multi_omics_integration"
        - "quantum_computational_biology"
      
      # Knowledge Base Configuration
      knowledge_base:
        graph_neural_networks:
          attention_mechanisms: 0.4
          message_passing: 0.3
          biological_priors: 0.3
        single_cell_analysis:
          cell_type_classification: 0.5
          trajectory_inference: 0.3
          spatial_analysis: 0.2
      
      # Experimental Settings
      experimental_settings:
        num_hypotheses_per_domain: 50
        num_algorithms_to_discover: 25
        validation_datasets: 
          - "pbmc_10k"
          - "mouse_brain_atlas"
          - "human_lung_cell_atlas"
          - "covid19_immune_landscape"
        statistical_significance_threshold: 0.01
        effect_size_threshold: 0.05
        max_concurrent_experiments: 10
        
      # Performance Optimization
      performance:
        enable_gpu_acceleration: true
        max_memory_gb: 64
        enable_distributed_computing: true
        cache_size_gb: 16
        
      # Security Configuration
      security:
        enable_encryption: true
        intrusion_detection: true
        audit_logging: true
        rate_limiting: true
        
      # Quality Gates
      quality_gates:
        performance_threshold: 0.85
        security_threshold: 0.90
        reliability_threshold: 0.85
        scalability_threshold: 0.80
        maintainability_threshold: 0.85
        test_coverage_threshold: 0.85

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: terragon-research-engine
  namespace: production
  labels:
    app: terragon-sdlc
    component: research-engine
    version: v4.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: terragon-sdlc
      component: research-engine
  template:
    metadata:
      labels:
        app: terragon-sdlc
        component: research-engine
        version: v4.0
    spec:
      containers:
      - name: quantum-research-engine
        image: terragon/quantum-research:v4.0
        ports:
        - containerPort: 8080
          name: http-api
        - containerPort: 8081
          name: metrics
        env:
        - name: TERRAGON_MODE
          value: "production"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: DATABASE_URL
          value: "postgresql://postgres-service:5432/terragon"
        - name: CUDA_VISIBLE_DEVICES
          value: "0,1,2,3"
        resources:
          requests:
            memory: "8Gi"
            cpu: "2000m"
            nvidia.com/gpu: "1"
          limits:
            memory: "16Gi"
            cpu: "4000m"
            nvidia.com/gpu: "2"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: data-volume
          mountPath: /app/data
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: baseline-framework
        image: terragon/baseline-framework:v4.0
        ports:
        - containerPort: 8082
          name: baseline-api
        env:
        - name: TERRAGON_MODE
          value: "production"
        - name: RESEARCH_ENGINE_URL
          value: "http://localhost:8080"
        resources:
          requests:
            memory: "4Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "2000m"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: data-volume
          mountPath: /app/data
      volumes:
      - name: config-volume
        configMap:
          name: terragon-sdlc-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: terragon-data-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: terragon-infrastructure
  namespace: production
  labels:
    app: terragon-sdlc
    component: infrastructure
    version: v4.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: terragon-sdlc
      component: infrastructure
  template:
    metadata:
      labels:
        app: terragon-sdlc
        component: infrastructure
        version: v4.0
    spec:
      containers:
      - name: robust-infrastructure
        image: terragon/robust-infrastructure:v4.0
        ports:
        - containerPort: 8083
          name: infra-api
        - containerPort: 8084
          name: monitoring
        env:
        - name: TERRAGON_MODE
          value: "production"
        - name: MONITORING_ENABLED
          value: "true"
        - name: SECURITY_LEVEL
          value: "high"
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1000m"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: logs-volume
          mountPath: /app/logs
      - name: optimization-engine
        image: terragon/optimization-engine:v4.0
        ports:
        - containerPort: 8085
          name: optim-api
        env:
        - name: TERRAGON_MODE
          value: "production"
        - name: AUTO_SCALING_ENABLED
          value: "true"
        - name: CUDA_VISIBLE_DEVICES
          value: "0,1"
        resources:
          requests:
            memory: "4Gi"
            cpu: "1000m"
            nvidia.com/gpu: "1"
          limits:
            memory: "8Gi"
            cpu: "2000m"
            nvidia.com/gpu: "2"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
      volumes:
      - name: config-volume
        configMap:
          name: terragon-sdlc-config
      - name: logs-volume
        persistentVolumeClaim:
          claimName: terragon-logs-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: terragon-service
  namespace: production
  labels:
    app: terragon-sdlc
spec:
  type: LoadBalancer
  selector:
    app: terragon-sdlc
    component: research-engine
  ports:
  - name: http-api
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: baseline-api
    port: 8082
    targetPort: 8082
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: terragon-infrastructure-service
  namespace: production
  labels:
    app: terragon-sdlc
    component: infrastructure
spec:
  type: ClusterIP
  selector:
    app: terragon-sdlc
    component: infrastructure
  ports:
  - name: infra-api
    port: 8083
    targetPort: 8083
    protocol: TCP
  - name: monitoring
    port: 8084
    targetPort: 8084
    protocol: TCP
  - name: optim-api
    port: 8085
    targetPort: 8085
    protocol: TCP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: terragon-data-pvc
  namespace: production
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Ti
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: terragon-logs-pvc
  namespace: production
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: terragon-research-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: terragon-research-engine
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: concurrent_experiments
      target:
        type: AverageValue
        averageValue: "5"

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: terragon-network-policy
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: terragon-sdlc
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: production
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
    - protocol: TCP
      port: 8082
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: production
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
  - to: []
    ports:
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 80    # HTTP

---
apiVersion: v1
kind: Secret
metadata:
  name: terragon-secrets
  namespace: production
type: Opaque
data:
  database_password: <base64-encoded-password>
  redis_password: <base64-encoded-password>
  encryption_key: <base64-encoded-encryption-key>
  api_key: <base64-encoded-api-key>

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: terragon-quality-gates
  namespace: production
spec:
  schedule: "0 */4 * * *"  # Every 4 hours
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: quality-gates-runner
            image: terragon/quality-gates:v4.0
            command:
            - /bin/sh
            - -c
            - |
              python3 -m pytest tests/test_comprehensive_quality_gates.py -v --tb=short
              python3 /app/quality_gates_reporter.py
            env:
            - name: TERRAGON_MODE
              value: "production"
            - name: QUALITY_GATE_THRESHOLD
              value: "0.85"
            volumeMounts:
            - name: config-volume
              mountPath: /app/config
          volumes:
          - name: config-volume
            configMap:
              name: terragon-sdlc-config
          restartPolicy: OnFailure

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: terragon-metrics
  namespace: production
  labels:
    app: terragon-sdlc
spec:
  selector:
    matchLabels:
      app: terragon-sdlc
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
  - port: monitoring
    interval: 30s
    path: /metrics